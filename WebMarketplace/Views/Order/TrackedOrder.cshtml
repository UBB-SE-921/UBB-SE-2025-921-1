@model SharedClassLibrary.Domain.TrackedOrder
@inject SharedClassLibrary.Service.ITrackedOrderService TrackedOrderService
@{
    ViewData["Title"] = "Track Order";
    var checkpoints = await TrackedOrderService.GetAllOrderCheckpointsAsync(Model.TrackedOrderID);
}

<div class="container mt-4">
    <h2>Track Order #@Model.TrackedOrderID</h2>

    <div class="row">
        <!-- Order Details -->
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h4>Order Details</h4>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Order ID:</dt>
                        <dd class="col-sm-8">@Model.OrderID</dd>

                        <dt class="col-sm-4">Current Status:</dt>
                        <dd class="col-sm-8">@Model.CurrentStatus</dd>

                        <dt class="col-sm-4">Estimated Delivery:</dt>
                        <dd class="col-sm-8">@Model.EstimatedDeliveryDate.ToString("dd/MM/yyyy")</dd>

                        <dt class="col-sm-4">Delivery Address:</dt>
                        <dd class="col-sm-8">@Model.DeliveryAddress</dd>
                    </dl>
                </div>
            </div>
        </div>

        <!-- Checkpoints Timeline -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4>Tracking History</h4>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        @foreach (var checkpoint in checkpoints.OrderByDescending(c => c.Timestamp))
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker"></div>
                                <div class="timeline-content">
                                    <h5 class="mb-1">@checkpoint.Status</h5>
                                    <p class="mb-1">@checkpoint.Description</p>
                                    <small class="text-muted">
                                        @checkpoint.Timestamp.ToString("dd/MM/yyyy HH:mm")
                                        @if (!string.IsNullOrEmpty(checkpoint.Location))
                                        {
                                            <span> - @checkpoint.Location</span>
                                        }
                                    </small>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .timeline {
        position: relative;
        padding: 20px 0;
    }

    .timeline-item {
        position: relative;
        padding-left: 30px;
        margin-bottom: 20px;
    }

    .timeline-marker {
        position: absolute;
        left: 0;
        top: 0;
        width: 12px;
        height: 12px;
        background-color: #007bff;
        border-radius: 50%;
    }

    .timeline-content {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
        border-left: 3px solid #007bff;
    }
</style> 